tools. 
<body> 
class="post-header"> 
clean</span> 
rm 
rm 
rm 
class="highlighter-rouge">CFLAGS</code>, 
clean</span> 
rm 
rm 
rm 
are 
there 
are 
are 
all 
are 
are 
id="goals">Goals</h3> 
</span> 
starter 
bag.h 
webpage.c 
</span> 
class="nv">L</span> 
class="nf">$L/bag.h 
class="highlighter-rouge">ld</code> 
as-yet 
line. 
all</h2> 
webpage.c 
../libcs50/libcs50.a 
</span> 
starter 
appropriate 
(specified 
page 
class="highlighter-rouge">include</code> 
Any 
hashtable.o 
jhash.o 
set.o 
hashtable.o 
jhash.o 
set.o 
hashtable.o 
jhash.o 
set.o 
hashtable.o 
jhash.o 
set.o 
class="nt">-I</span>../libcs50 
class="nt">-I</span>../libcs50 
CFLAGS 
class="nv">$(CFLAGS)</span> 
webpage_internal.h 
mean 
class="nf">$(PROG)</span> 
class="nv">$(CFLAGS)</span> 
probably 
directory 
directory 
directory 
directory 
class="nv">LLIBS</span> 
various 
another 
another 
directory 
directory 
directory 
directory 
directory 
directory 
class="nl">.PHONY</span><span 
file.h 
by 
by 
class="nl">.PHONY</span><span 
(often 
contain 
by 
by 
by 
Campbell, 
href="/engs50/50.png" 
names.c 
names.c 
In 
[<a 
href="/engs50/Labs/">Labs</a>] 
[<a 
[<a 
[<a 
[<a 
class="c"># 
class="o">=</span> 
class="o">=</span> 
class="o">=</span> 
class="c"># 
class="c"># 
counters.c 
memory.md 
allows 
value 
<p>addition 
class="c"># 
class="o">=</span> 
class="o">=</span> 
class="o">=</span> 
class="o">=</span> 
class="o">=</span> 
class="c"># 
class="c"># 
class="c"># 
class="o">=</span> 
class="o">=</span> 
class="c"># 
counters.c 
executed 
<font 
</p> 
name="description" 
in 
"> 
in 
in 
in 
in 
in 
separate 
in 
class="highlighter-rouge">names.o</code> 
in 
in 
in 
in 
in 
in 
in 
in 
in 
Make’s 
line 
in 
in 
in 
in 
College</h2> 
last 
class="site-header"> 
See 
href="/makefiles/">Lecture</a> 
<span 
<span 
class="nv">CFLAGS</span><span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
from 
from 
<span 
<span 
<span 
<span 
class="nv">CFLAGS</span><span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
so, 
from 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
<span 
from 
class="highlighter-rouge">common.a</code> 
class="post-title">More 
– 
class="nf">names</span> 
jhash.h 
links 
actually 
“library” 
holds 
icon" 
Makefiles</li> 
"names" 
name 
thus, 
"names" 
module. 
class="nv">$(OBJS)</span> 
<em>names</em> 
module. 
class="nv">$(OBJS)</span> 
<html> 
<meta 
<meta 
<meta 
<meta 
new 
new 
used 
new 
used 
it 
Unix, 
used 
it 
it 
it 
later 
it 
math 
<p>I 
original 
read 
class="language-bash 
based 
<!DOCTYPE 
the 
<nav 
the 
the 
for 
the 
the 
the 
the 
the 
for 
the 
for 
for 
the 
the 
the 
the 
the 
the 
for 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
for 
the 
the 
the 
the 
the 
for 
for 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
for 
the 
the 
the 
the 
the 
the 
for 
the 
for 
the 
the 
the 
the 
the 
<ul> 
jhash.c 
<ul> 
link 
link 
jhash.c 
class="nf">bag.h 
webpage.o 
specifically, 
webpage.o 
webpage.o 
webpage.o 
way 
upon 
deeply 
terminal 
class="nt">-Wall</span> 
class="k">*</span>~ 
lecture 
lecture 
counters.h 
several 
class="nt">-Wall</span> 
class="k">*</span>~ 
<em>archive</em> 
t</code>:</p> 
class="nv">$ 
class="nt">-Wall</span> 
class="nt">-Wall</span> 
class="nt">-Wall</span> 
class="nt">-Wall</span> 
class="nt">-Wall</span> 
class="nt">-Wall</span> 
class="nt">-Wall</span> 
class="nt">-Wall</span> 
class="nt">-Wall</span> 
class="nv">$ 
lecture 
class="nt">-Wall</span> 
class="nt">-Wall</span> 
class="nv">$ 
<h1 
those 
archive. 
those 
files. 
those 
those 
those 
Entering 
Entering 
those 
those 
David 
library-provided 
file 
David 
file 
file 
file 
whole 
file 
file 
file 
file 
file 
whole 
</span>make 
</span>make 
file 
<p>Indeed, 
course 
include 
memory.h 
which 
which 
which 
which 
include 
include 
list 
still 
needed) 
which 
~/demo]<span 
~/demo]<span 
~/demo]<span 
include 
include 
include 
include 
list 
class="highlight"><code><span 
class="highlight"><code><span 
id="producing-library-archives">Producing 
class="highlight"><code><span 
counters.o 
class="highlighter-rouge">ar 
class="highlighter-rouge">libcs50.a</code> 
class="highlighter-rouge">ar 
counters.o 
class="highlight"><code><span 
counters.o 
counters.o 
class="highlighter-rouge">libcs50.a</code> 
class="highlighter-rouge">-I</code> 
Lab4; 
src="/engs50/50.png" 
class="nv">LIBS</span> 
“libraries”, 
class="highlighter-rouge">libcs50.a</code>; 
class="nv">LIBS</span> 
important.</em></p> 
shows 
producing 
class="o">=</span><span 
dropped 
dependence 
class="o">=</span><span 
one?</p> 
files.</em> 
reaches 
class="nv">OBJS</span> 
<p>Let’s 
not 
class="nv">OBJS</span> 
peek 
class="nv">OBJS</span> 
not 
structure 
</head> 
</nav> 
name) 
It 
class="err">$(OBJS)</span> 
building 
outstanding 
class="page-content"> 
class="post"> 
Makefile 
Makefile 
modify 
Makefile 
Makefile 
Makefile 
Makefile 
any 
Makefile 
Makefile 
class="nt">-I</span><span 
any 
class="nv">LIB</span> 
Makefile 
Engs 
learn 
learn 
href="/engs50/Notes/design/makefiles.html"> 
tree 
Notice 
type 
<em>Thus, 
class="err">$(LIB)</span> 
t 
directive 
techniques 
arrange 
initial-scale=1"> 
<li>Another 
extra</a>.</p> 
class="nv">PROG</span> 
depends 
depends 
class="nv">PROG</span> 
depends 
$(LLIBS)</span> 
archiving 
class="nl">$(LIB)</span><span 
but 
but 
Balkcom. 
& 
April 
this 
this 
this 
this 
this 
April 
class="nv">$(LLIBS)</span> 
then 
this 
was 
width=48 
-> 
class="nt">-o</span> 
use 
use 
class="nt">-o</span> 
single 
single 
pulls 
pulls 
class="nt">-o</span> 
class="nt">-o</span> 
class="nt">-o</span> 
class="nt">-o</span> 
class="nt">-o</span> 
class="nt">-o</span> 
class="nt">-o</span> 
class="nt">-o</span> 
class="nt">-o</span> 
class="nt">-o</span> 
class="nt">-o</span> 
use 
systems. 
simply 
am 
</html> 
<article 
without 
current 
class="highlighter-rouge">-I</code>) 
https://thayer.github.io/engs50/Notes/design/makefiles.html 3 17825 
class="highlighter-rouge"><div 
class="o">=</span>gcc 
on 
on 
class="highlighter-rouge"><div 
on 
<em>my</em> 
on 
class="o">=</span>gcc 
on 
on 
before; 
on 
class="highlighter-rouge"><div 
<p>To 
on 
dependencies.</p> 
This 
Kotz, 
on 
we 
class="o">=</span>c11 
class="nl">bag.o</span><span 
I 
I 
I 
I 
also 
job 
class="o">=</span>c11 
downloaded 
we 
we 
class="o">=</span>c11 
class="o">=</span>c11 
class="o">=</span>c11 
class="o">=</span>c11 
class="o">=</span>c11 
class="o">=</span>c11 
class="o">=</span>c11 
class="o">=</span>c11 
class="o">=</span>c11 
class="o">=</span>c11 
class="o">=</span>c11 
that’s 
we 
we 
I 
Engs50 
using 
class="highlighter-rouge">make</code>, 
class="o">:</span> 
class="o">:</span> 
class="o">:</span> 
class="o">:</span> 
class="o">:</span> 
class="o">:</span> 
class="o">:</span> 
using 
want 
just 
highlighter-rouge"><div 
class="o">:</span> 
class="o">:</span> 
class="o">:</span> 
class="o">:</span> 
class="o">:</span> 
highlighter-rouge"><div 
class="o">:</span> 
class="highlighter-rouge">ar</code> 
highlighter-rouge"><div 
just 
want 
just 
carefully 
these 
maintainable, 
/> 
a 
today's 
adapted 
a 
a 
is 
a 
clear</p> 
is 
is 
a 
is 
is 
a 
a 
is 
is 
a 
a 
a 
is 
is 
a 
Thus, 
program, 
a 
a 
is 
a 
is 
http-equiv="X-UA-Compatible" 
files, 
knows 
files, 
files, 
<p> 
<div 
<div 
<div 
[script](/engs50/Notes/design/script.txt). 
<div 
<div 
macro 
class="highlighter-rouge">L</code> 
macro 
directories.</p> 
<div 
compressed) 
<div 
<div 
<div 
cr 
<div 
Zhou, 
large, 
class="post-content"> 
</ul> 
class="highlighter-rouge">libcs50</code> 
class="highlighter-rouge">names.c</code> 
class="highlighter-rouge">libcs50</code> 
be 
</ul> 
class="highlighter-rouge">.tgz</code>, 
files.</p> 
That 
be 
We 
<title>More 
href="/engs50/Examples/">Examples</a>] 
class="wrapper"> 
<h3 
data 
could 
could 
class="wrapper"> 
id="makefiles">Makefiles</h2> 
webpage.md 
<p>the 
<p>the 
<p>the 
<p>the 
<p>the 
<p>the 
specific 
completeness.)</p> 
class="site-title" 
href="/engs50/Resources/">Resources</a>] 
class="nv">$L</span>/libcs50.a 
forms 
write 
<p>You 
with 
recall 
examples 
with 
hashtable.c 
webpage_fetch.c 
existing 
with 
with 
when 
when 
class="highlighter-rouge">libcs50/Makefile</code> 
class="se">\</span> 
creates 
with 
with 
~/demo/libcs50]$ 
~/demo/libcs50]$ 
with 
hashtable.c 
webpage_fetch.c 
with 
<strong>2018-10-10</strong> 
</a> 
bag.o 
webpage.h 
<em>math 
libraries”, 
rule, 
general 
rule, 
rule, 
refer 
An 
bag.o 
bag.o 
bag.o 
bag.o 
class="nl">clean</span><span 
class="nl">clean</span><span 
or 
or 
replaces 
most 
html> 
readlinep.h</span> 
class="k">*</span>.dSYM 
class="k">*</span>.dSYM 
<p>A 
href="/makefiles/extra/">lecture 
may, 
need 
content="IE=edge"> 
understandable 
dive 
depend 
libcs50/ 
libcs50/ 
depend 
irrelevant, 
similar 
<link 
<link 
<link 
Make 
Make 
class="highlighter-rouge">.dmg</code> 
including 
shown 
Professors 
program 
<p>For 
program 
class="nt">-rf</span> 
program 
program 
provides 
program 
class="nt">-rf</span> 
loads 
Palmer, 
indebted 
follows. 
class="language-make 
archive:</p> 
class="language-make 
memory.o 
memory.o 
memory.o 
memory.o 
Leaving 
Leaving 
class="site-nav"> 
href="/engs50/Notes/">Notes</a>] 
directory.</p> 
enclosed 
argument 
argument 
enclosed 
deeper 
that 
that 
that 
that 
that 
that 
that 
that 
that 
class="o">[</span>cs50@flume 
class="o">[</span>cs50@flume 
class="o">[</span>cs50@flume 
that 
(In 
that 
Kotz 
kit</a>.</p> 
important 
libcs50 
Kotz 
libcs50 
kit</a>.</p> 
educators. 
Makefiles</title> 
readlinep.o 
class="nf">bag.h</span> 
class="highlighter-rouge">names9.c</code> 
(not 
name.</p> 
an 
better 
an 
an 
id="building-it-all">Building 
an 
align=center 
<!-- 
class="nl">readlinep.o</span><span 
(the 
<em>archive 
Make:</p> 
- 
- 
archives</li> 
class="nv">CC</span><span 
meaning 
library; 
class="nv">CC</span><span 
file</em> 
some 
ar 
ar 
now 
class="nf">$(OBJS) 
convenience. 
after 
Dartmouth 
"bag" 
compiler 
needed 
"bag" 
Inside 
coalescing 
<head> 
about 
about 
names.o 
class="nf">$(OBJS)</span> 
tells 
next 
names.o 
class="highlighter-rouge">.zip</code>, 
class="nf">$(OBJS)</span> 
make: 
make: 
make: 
names.o 
names.o 
make: 
about 
<p><small>This 
available 
available 
updated 
class="highlighter-rouge">.a</code> 
class="highlighter-rouge">.a</code> 
class="highlighter-rouge">.a</code> 
class="highlighter-rouge">.a</code> 
class="err">...</span> 
manipulates 
class="highlighter-rouge">.a</code> 
class="highlighter-rouge">.a</code> 
updated 
file.md 
“local 
class="highlighter-rouge">$(PROG)</code> 
symbols 
reference 
symbols 
symbols 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
class="highlighter-rouge">LLIBS</code> 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<code 
<img 
peer. 
href="/engs50/Examples/namesB.c">namesB.c</a>.</p> 
README.md 
lives. 
class="highlighter-rouge">$L</code></p> 
<footer 
process 
directory, 
class="highlighter-rouge">-lm</code></p> 
class="nt">-C</span> 
class="nt">-C</span> 
Make, 
class="nv">$(CC)</span> 
<em>bag</em>, 
one 
<p>definition 
class="nv">$(CC)</span> 
archive 
libcs50.a 
archive 
libcs50.a 
libcs50.a 
version 
href="https://engineering.dartmouth.edu/people/faculty/stephen-taylor/">Stephen 
name="viewport" 
class="nl">all</span><span 
class="nl">$(PROG)</span><span 
class="nf">readlinep.h</span> 
class="nl">all</span><span 
class="nl">$(PROG)</span><span 
archives</h2> 
point 
content="width=device-width, 
alt="icon"> 
look 
library 
class="nt">-std</span><span 
class="k">*</span>.o 
library 
~/demo]$ 
library 
library 
can 
look 
library 
indicates 
library 
class="nt">-std</span><span 
class="k">*</span>.o 
library 
library 
library 
file; 
can 
library 
class="nt">-std</span><span 
class="nt">-std</span><span 
class="nt">-std</span><span 
class="nt">-std</span><span 
class="nt">-std</span><span 
class="nt">-std</span><span 
class="nt">-std</span><span 
class="nt">-std</span><span 
class="nt">-std</span><span 
class="nt">-std</span><span 
class="nt">-std</span><span 
file; 
library 
<a 
<a 
<a 
<a 
<a 
<a 
<li> 
<li> 
<li> 
<li> 
<li> 
<li> 
<li> 
<li> 
library.</p> 
metadata 
file. 
exhausted 
final 
class="highlighter-rouge">names.o</code>, 
final 
<a 
<a 
</font> 
gcc 
gcc 
gcc 
gcc 
gcc 
gcc 
gcc 
gcc 
gcc 
gcc 
gcc 
top-level 
</article> 
our 
our 
set.h 
describing 
makes 
size=-1> 
</body> 
C 
class="nl">names.o</span><span 
href="https://gitlab.cs.dartmouth.edu/CS50/tse">Lab4 
linker 
linker 
default 
linker 
class="nv">$L</span> 
class="nl">names.o</span><span 
linker 
linker 
linker 
(if 
linker 
C 
compiler; 
only 
href="https://gitlab.cs.dartmouth.edu/CS50/tse">Lab4 
resulting 
class="s1">'/net/class/cs50/demo/lecture'</span> 
class="s1">'/net/class/cs50/demo/lecture'</span> 
to 
to 
to 
to 
to 
to 
to 
to 
to 
to 
to 
to 
to 
to 
to 
to 
to 
to 
collection 
to 
to 
to 
class="err">cr</span> 
to 
to 
class="nt">-c</span> 
class="nt">-c</span> 
class="nt">-c</span> 
class="nt">-c</span> 
class="nt">-c</span> 
class="nt">-c</span> 
class="nt">-c</span> 
class="nt">-c</span> 
class="nt">-c</span> 
class="nt">-c</span> 
to 
to 
to 
└── 
└── 
of 
of 
of 
of 
of 
of 
of 
files; 
of 
of 
of 
class="highlighter-rouge">.o</code> 
class="highlighter-rouge">.o</code> 
of 
files; 
class="highlighter-rouge">.o</code> 
class="highlighter-rouge">.o</code> 
class="highlighter-rouge">.o</code> 
class="highlighter-rouge">.o</code> 
list. 
of 
class="highlighter-rouge">.o</code> 
class="highlighter-rouge">.o</code> 
two 
of 
class="highlighter-rouge">.o</code> 
of 
of 
software 
names 
(This 
names 
names 
The 
[cs50@flume 
program. 
calls 
names 
one</em> 
calls 
may 
<header 
<header 
href="/engs50/Examples/names-Makefile">names-Makefile</a> 
class="nf">all 
executable 
file.c 
shorthand 
class="nf">all 
executable 
<p>What 
its 
order 
webpage_fetch.o 
its 
webpage_fetch.o 
file.c 
webpage_fetch.o 
webpage_fetch.o 
its 
path 
href="/engs50/"> 
<p>The 
library</em>; 
turn, 
<p>The 
above, 
<p>Notice 
(CS50) 
class="nv">$(PROG)</span> 
class="nv">$(PROG)</span> 
memory.c 
set.c 
us 
macro, 
macro, 
command 
line).</p> 
class="nv">$(PROG)</span> 
class="nv">$(PROG)</span> 
command 
command 
show 
memory.c 
set.c 
command 
command 
command 
(CS50) 
</footer> 
uses 
</code></pre></div></div> 
</code></pre></div></div> 
where 
keep 
because 
uses 
uses 
</code></pre></div></div> 
</code></pre></div></div> 
</code></pre></div></div> 
</code></pre></div></div> 
<em>all 
implicit 
class="site-footer"> 
build 
rel="canonical" 
<li>Producing 
as 
as 
as 
as 
single-letter 
class="highlighter-rouge">LIBS</code> 
class="highlighter-rouge">LIBS</code> 
rule 
build 
build 
other 
as 
as 
other 
build 
build 
build 
commands 
rule 
as 
</div> 
</div> 
</div> 
</div> 
design 
Makefiles</h1> 
files 
files 
files 
files 
files 
files 
files 
files 
files 
files 
files 
files 
files 
files 
class="s1">'/net/class/cs50/demo/libcs50'</span> 
class="s1">'/net/class/cs50/demo/libcs50'</span> 
files 
files 
how 
wrote 
# 
# 
object 
object 
leverage 
class="highlight"><code>[cs50@flume 
</li> 
</li> 
</li> 
</li> 
</li> 
</li> 
</li> 
lack 
</li> 
# 
# 
object 
object 
how 
object 
object 
file, 
how 
how 
object 
target 
object 
class="highlight"><code>[cs50@flume 
program.</p> 
do 
class="err">ar</span> 
do 
</header> 
</header> 
<p>Recall 
class="highlighter-rouge">$L</code> 
class="highlighter-rouge">$L</code> 
same 
<p>Anyway, 
features:</p> 
well 
cr</code> 
rel="shortcut 
bag.c 
../libcs50 
<em>library 
bag.c 
think 
class="highlight"><pre 
class="nt">-pedantic</span> 
class="highlight"><pre 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
├── 
class="highlight"><pre 
class="nt">-pedantic</span> 
inside 
class="highlight"><pre 
class="highlight"><pre 
class="highlight"><pre 
class="nt">-pedantic</span> 
class="nt">-pedantic</span> 
class="nt">-pedantic</span> 
class="nt">-pedantic</span> 
class="nt">-pedantic</span> 
class="nt">-pedantic</span> 
class="nt">-pedantic</span> 
class="nt">-pedantic</span> 
class="nt">-pedantic</span> 
class="nt">-pedantic</span> 
class="nt">-pedantic</span> 
running 
class="highlighter-rouge">-lm</code>. 
class="footer-heading">Engs50 
<strong>18:07</strong>.</small></p> 
class="nt">-ggdb</span> 
class="highlighter-rouge">-I$L</code> 
class="nt">-ggdb</span> 
$L/file.h</span> 
class="nt">-ggdb</span> 
class="nt">-ggdb</span> 
class="nt">-ggdb</span> 
class="nt">-ggdb</span> 
class="nt">-ggdb</span> 
class="nt">-ggdb</span> 
class="nt">-ggdb</span> 
class="nt">-ggdb</span> 
class="nt">-ggdb</span> 
class="nt">-ggdb</span> 
class="nt">-ggdb</span> 
class="highlighter-rouge">.c</code> 
into 
</span><span 
</span><span 
class="highlighter-rouge">all</code> 
class="highlighter-rouge">$(LLIBS)</code> 
</span><span 
</span><span 
into 
archive, 
</span><span 
Build 
</span><span 
will 
will 
tell 
tell 
unresolved 
unresolved 
designed 
Taylor</a> 
at 
class="nt">-lm</span> 
class="nv">$(LIBS)</span> 
class="nt">-lm</span> 
class="nv">$(LIBS)</span> 
contains 
arguments 
class="nt">-lm</span> 
class="highlighter-rouge">gcc</code> 
class="highlighter-rouge">gcc</code> 
arguments 
at 
charset="utf-8"> 
content="In 
reliable, 
Unix 
hashtable.h 
if 
you 
you 
href="/engs50/css/main.css"> 
href="/engs50/Reading/">Reading</a>] 
<h2 
class="nt">-f</span> 
class="nt">-f</span> 
class="nt">-f</span> 
class="nt">-f</span> 
<h2 
you 
you’ve 
<h2 
you 
<h2 
rel="stylesheet" 
file.o 
file.o 
file.o 
file.o 
$(CFLAGS) 
substitute 
substitute 
inform 
them 
make 
<p>In 
them 
too. 
your 
and 
development 
and 
and 
parens; 
and 
and 
and 
and 
and 
and 
and 
and 
and 
and 
