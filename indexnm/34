tools. 
<body> 
class="post-header"> 
are 
are 
<em>IsInternalURL()</em>).</li> 
are 
are 
all 
are 
grain.”</p> 
another; 
“error” 
all 
are 
are 
are 
subsystem, 
are 
are 
there 
id="goals">Goals</h3> 
discuss</p> 
information 
performance 
information 
routine 
tests 
routine 
routine 
routine 
routine 
<p>One 
call 
what 
routine 
routine 
routine 
what 
routine 
tests 
routine 
routine 
<em>module</em>; 
decisions, 
Thus 
page 
(a 
<li>Isolate 
<li>Isolate 
long 
closely 
before 
inter-module 
long 
should 
should 
should 
should 
should 
should 
should 
<em>Preconditions</em> 
should 
should 
connections)</li> 
<li><strong>intimacy</strong> 
connections)</li> 
another 
another 
preprocessor. 
weak 
by 
by 
easily 
hard 
input-modify-output 
order; 
by 
by 
Campbell, 
href="/engs50/50.png" 
<em>function</em> 
easier 
<em>function</em> 
In 
[<a 
href="/engs50/Labs/">Labs</a>] 
[<a 
[<a 
[<a 
[<a 
coupling</h1> 
In 
value 
McConnell</p> 
routine!</li> 
McConnell</p> 
sanity 
value 
In 
<font 
</p> 
name="description" 
in 
"> 
in 
in 
in 
in 
in 
in 
in 
in 
in 
piece 
in 
in 
in 
in 
College</h2> 
last 
class="site-header"> 
from 
(optimize 
structures… 
verb 
necessary</li> 
id="kinds-of-coupling">Kinds 
from 
<li>Be 
from 
strong 
(algorithm, 
nonstandard 
strong 
– 
sequential 
sequential 
– 
possible.”</p> 
indirect 
<li><strong>Data-structure 
strong 
strong 
strong 
everything 
coupling</h4> 
<em>module</em> 
icon" 
no 
code</li> 
etc)</li> 
etc)</li> 
name 
name 
name 
no 
minimal 
<li>less 
complexity).</li> 
programmers, 
boundaries 
why 
why 
(directness 
data-structure 
id="modules">Modules</h2> 
module. 
places),</li> 
<html> 
<meta 
<meta 
<meta 
<meta 
it 
<em>do</em>, 
it 
it 
it 
it 
it 
it 
C) 
(can 
(can 
nesting, 
naming 
routine, 
that, 
maintainable,</li> 
based 
<!DOCTYPE 
the 
<nav 
the 
the 
<li>Centralize 
for 
the 
the 
the 
the 
the 
for 
the 
the 
for 
for 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
the 
for 
the 
for 
the 
the 
the 
for 
the 
the 
the 
for 
the 
the 
the 
<ul> 
.]</p> 
<ul> 
(makes 
<ul> 
<ul> 
while 
cohesion</em></strong>.</p> 
<ul> 
operation.</li> 
<ul> 
<ul> 
<ul> 
<ul> 
<ul> 
<ul> 
<ul> 
high-cohesion 
create 
particularly 
<p>Each 
others,</li> 
upon 
deeply 
lecture 
concept, 
few 
function</em> 
<li><strong>Sequential 
several 
several 
together 
complement 
few 
<h1 
<em>Code 
executed, 
those 
those 
<em>routines</em>:</p> 
(named 
order, 
<h4 
whole 
<h4 
values 
<h4 
<h4 
case 
<h4 
<h4 
course 
cohesion</strong>:</p> 
cohesion</strong>:</p> 
apparent 
<li>Put 
which 
<li><em>cohesion</em> 
routine)</li> 
routine)</li> 
sound 
performed 
performed 
hiding</h4> 
cohesion, 
src="/engs50/50.png" 
conventions!</li> 
you’d 
structure.</li> 
id="defensive-programming">Defensive 
(including 
languages, 
<li>Reduce 
up.</p> 
<p>“Make 
code.</li> 
parameters 
id="routine-parameters">Routine 
parameters 
parameters 
coupling</title> 
features)</li> 
features)</li> 
not 
not 
not 
structure 
debugger 
self-testable,</li> 
</head> 
</nav> 
<li>Plan 
great 
data, 
has 
routines.</p> 
split 
parameters: 
has 
has 
outstanding 
class="page-content"> 
class="post"> 
Press, 
does</li> 
study 
class="highlighter-rouge">switch</code> 
degree 
You 
related 
<li>In 
clear 
Engs 
learn 
learn 
performs 
input 
type 
(classes) 
comment 
initial-scale=1"> 
but 
but 
but 
authority 
she 
clearly 
Balkcom. 
& 
(narrow 
<li>Promote 
between 
between 
routines:</p> 
<p>Best 
<p>Best 
consistent 
class="highlighter-rouge">inline</code> 
between 
cohesion 
was 
width=48 
use 
use 
complexity</li> 
<li>Hide 
devices, 
<li>Hide 
<li>Hide 
<li>Hide 
use 
use 
use 
use 
use 
serves 
interface 
interface 
systems. 
strongly] 
<li>Use 
<li>Use 
<li>Use 
abstraction 
am 
</html> 
<article 
<em>macros</em> 
Steve 
value. 
<li>Avoid 
data.</li> 
<li><strong>Logical 
on 
(Somewhat 
on 
on 
(in 
(in 
wide 
on 
on 
This 
Kotz, 
on 
we 
we 
routines)</li> 
readability 
deep 
<em>postconditions</em> 
documents 
I 
Engs50 
want 
want 
<p>“Cohesion 
cohesion</strong>: 
cohesion</strong>: 
cohesion</strong>: 
cohesion</strong>: 
cohesion</strong>: 
using 
cohesion</strong>: 
these 
these 
these 
maintainable, 
/> 
a 
a 
a 
a 
a 
a 
a 
a 
a 
is 
protocols, 
a 
a 
a 
a 
a 
a 
a 
a 
a 
a 
strength 
a 
is 
a 
is 
a 
a 
is 
is 
a 
a 
a 
is 
is 
a 
a 
a 
is 
a 
is 
a 
a 
a 
dividing 
is 
Thus, 
is 
http-equiv="X-UA-Compatible" 
files, 
(access 
module 
module 
module 
module 
module 
module 
module 
module 
module 
module 
module 
<p> 
<div 
<div 
<div 
don’t 
assumptions 
assumptions 
executes, 
assumptions 
<div 
Zhou, 
large, 
class="post-content"> 
</ul> 
chapter 
We 
be 
pointer 
</ul> 
be 
be 
</ul> 
</ul> 
be 
(strongest 
be 
</ul> 
be 
be 
be 
</ul> 
</ul> 
be 
</ul> 
</ul> 
</ul> 
handled 
be 
</ul> 
be 
</ul> 
href="/engs50/Examples/">Examples</a>] 
class="wrapper"> 
class="post-title">Cohesion 
<h3 
[Microsoft 
data 
data 
data 
<h3 
parameter. 
<h3 
(best 
<li><strong>Simple-data 
data 
data 
data 
data 
data 
data 
data 
modules?</p> 
loose 
class="wrapper"> 
come 
<em>perform</em>)</li> 
must 
must 
<strong><em>loose 
come 
reliable 
href="activity.html">activity</a> 
class="site-title" 
href="/engs50/Resources/">Resources</a>] 
code 
code 
<li>is 
code 
try 
data; 
routines.”</p> 
<p>You 
write 
code 
code 
code 
with 
typically 
with 
many 
find 
many 
with 
with 
typically 
many 
<strong>2018-10-10</strong> 
</a> 
general 
refer 
refer 
(like 
(like 
<em>boolean 
(like 
(like 
have 
have 
have 
have 
<li>Strive 
her 
<title>Cohesion 
or 
routines 
or 
routines 
reuse 
reuse 
or 
</blockquote> 
routines 
routines 
routines 
</blockquote> 
routines 
</blockquote> 
routines 
routines 
</blockquote> 
or 
or 
or 
routines 
or 
routines 
or 
or 
Java) 
interfaces 
html> 
<p>to 
<p>A 
<p>A 
share 
<p>A 
<p>A 
<em>numberOfNonzeros()</em>).</li> 
<p>Good 
best 
<p>Good 
best 
id="collaborative-work">Collaborative 
content="IE=edge"> 
understandable 
operations 
operations 
complicated 
operations 
operations 
operations 
operations 
operations 
coupling 
coupling 
coupling 
depend 
similar 
coupling 
understandable 
<link 
<link 
<link 
<em>subroutines</em> 
Professors 
program 
<em>routine</em> 
program 
control 
control 
<li><strong>Functional 
program 
cohesion.</li> 
Palmer, 
indebted 
time.</li> 
direct 
class="site-nav"> 
href="/engs50/Notes/">Notes</a>] 
break 
break 
break 
connection; 
programming</h4> 
user!), 
scope 
that 
that 
that 
that 
that 
that 
<li><strong>Pathological 
<p>“Try 
that 
that 
that 
interface.</li> 
that 
concepts 
McConnell. 
place)</li> 
like 
verbs 
educators. 
better 
than 
occasion, 
better 
better 
syntax, 
better 
an 
align=center 
<li><em>routines</em> 
(easier 
<li>describes 
wood, 
through 
practices:</p> 
insert 
practices:</p> 
details 
insert 
insert 
details 
- 
- 
Complete</em> 
hiding)</li> 
hiding)</li> 
sometimes 
some 
followed 
darn 
among 
evaluating 
(number 
coupling</strong>: 
coupling</strong>: 
coupling</strong>: 
coupling</strong>: 
coupling</strong>: 
variables 
among 
after 
variables 
implementation 
implementation 
among 
implementation 
Dartmouth 
(isolate 
(isolate 
(isolate 
% 
fault-free, 
% 
<li><strong>Communicational 
related.</li> 
<li><strong>Temporal 
<p><strong>Unacceptable 
id="coupling">Coupling</h3> 
tolerable 
C++.)</li> 
internal 
together, 
<head> 
<li>Simplify 
boolean 
tells 
i.e., 
about 
about 
about 
class="highlighter-rouge">const</code> 
get 
providing 
coupled 
coupling.</p> 
<p><small>This 
<em>procedure</em>. 
really 
needs 
crosses 
unknown 
updated 
readable; 
last.</li> 
hiding</em>.</li> 
sticks 
up 
<li><strong>Procedural 
<code 
coupling</em></strong> 
<code 
<code 
id="activity">Activity</h2> 
<img 
id="routines">Routines</h2> 
often 
more 
more 
<em>printCalendar()</em>).</li> 
were 
were 
were 
<li>Document 
href="/engs50/Notes/cohesion/example.c">example</a> 
<footer 
process 
here)</li> 
variables)</li> 
“status” 
cohesion</li> 
one 
name</p> 
related.” 
one 
one 
one 
depending 
one 
one 
one 
one 
one 
routines.</li> 
routines.</li> 
replacable,</li> 
version 
href="https://engineering.dartmouth.edu/people/faculty/stephen-taylor/">Stephen 
name="viewport" 
centralize 
named:</p> 
low-cohesion 
content="width=device-width, 
alt="icon"> 
types 
<em>procedure</em> 
<em>procedure</em> 
can 
can 
routine. 
checks 
can 
#define 
can 
checks 
interface.</p> 
look 
https://thayer.github.io/engs50/Notes/cohesion/ 2 11260 
<a 
<li>Improve 
<li>Improve 
<li>Improve 
reason 
reason 
simple 
simple 
parameters.</li> 
excellent 
<a 
<a 
<a 
</font> 
structures 
Coupling 
task. 
agreed-upon 
naming, 
</article> 
return 
functions 
return 
meaningless 
<blockquote> 
<blockquote> 
<blockquote> 
<blockquote> 
return 
functions 
object-oriented 
makes 
debuggable 
size=-1> 
</body> 
C 
sequences 
family 
only 
only 
only 
C 
C 
C 
<p>We 
approaching 
<strong><em>strong 
<p>Go 
interconnections 
<em>information 
to 
to 
to 
to 
to 
to 
to 
to 
(e.g., 
to 
to 
<strong>too 
to 
done 
to 
(cohesive) 
to 
to 
to 
to 
to 
to 
to 
<li><strong>Control 
to 
to 
to 
assert() 
to 
to 
collection 
to 
to 
to 
to 
to 
to 
to 
<li><em>coupling</em> 
of 
of 
of 
form 
of 
of 
of 
of 
routine’s 
of 
of 
of 
of 
of 
of 
two 
of 
of 
of 
of 
of 
two 
suspicious 
of 
exits.</li> 
Macros 
handy, 
of 
<em>class</em>.</p> 
necessary 
group 
encourages 
“hide” 
(hides 
<p>Modules 
of 
group 
of 
software 
href="/engs50/Notes/cohesion/"> 
<em>methods</em>.</p> 
may 
may 
id="macros">Macros</h4> 
mechanism 
<header 
<header 
(inlines 
its 
refers 
refers 
order 
clear, 
its 
href="/engs50/"> 
<p>The 
effects 
question 
ok 
routines. 
<li><strong>Global-data 
is</p> 
(CS50) 
might 
C++ 
(CS50) 
</footer> 
nonportable 
nonportable 
because 
nonstructured.</li> 
read-only.</li> 
uses 
<li>A 
because 
class="site-footer"> 
build 
rel="canonical" 
as 
other 
changes 
describe 
as 
as 
[or 
other 
as 
as 
parameter 
other 
do.</li> 
other 
other 
other 
encapsulate 
other 
as 
as 
</div> 
</div> 
</div> 
</div> 
design 
names</li> 
<li>Limit 
avoid 
language 
<li><strong>Coincidental 
little 
little 
how 
reasons 
object 
how 
obvious. 
<li>It 
modules.</p> 
outside 
debugging 
called 
read)</li> 
do 
things 
flag 
(Exception 
functions.)</li> 
things 
<li><strong>visibility</strong> 
interconnectedness, 
parameters, 
passes 
do 
parameters, 
called 
</header> 
</header> 
coupling</li> 
controlling 
global 
same 
same 
same 
global 
same 
global 
intra-module 
well 
good 
good 
fault-free.</p> 
good 
work 
rel="shortcut 
order.</li> 
connection 
connection 
passed 
<li>avoids 
cohesion</strong> 
statement 
<li><strong>size</strong> 
inside 
inside 
programmer 
programmer 
class="footer-heading">Engs50 
<strong>18:07</strong>.</small></p> 
function 
<li>a 
<li>a 
<li>a 
<li>follows 
If 
otherwise 
(or 
otherwise 
into 
change 
change 
things, 
change 
into 
structure, 
structure, 
<p>Why 
into 
coupling.</li> 
will 
will 
globals)</li> 
long</strong>. 
obvious)</li> 
<li><strong>flexibility</strong> 
“If 
parameters</h4> 
purposes. 
clean 
will 
designed 
Taylor</a> 
<p>There 
kind): 
contains 
contains 
contains 
at 
contains 
cohesion.” 
passing 
well-designed 
at 
at 
charset="utf-8"> 
content="In 
reliable, 
Unix 
(ADTs)</li> 
if 
if 
if 
if 
checking, 
largely 
you 
you 
href="/engs50/css/main.css"> 
href="/engs50/Reading/">Reading</a>] 
<h2 
portability 
you 
you 
you 
found 
<p>“The 
you 
you 
usually 
<h2 
you 
easily),</li> 
work</h4> 
<h2 
<h2 
rel="stylesheet" 
today’s 
programs 
put 
state) 
programming, 
class 
coupling. 
today’s 
parts 
body 
your 
lines, 
<p><strong>Acceptable 
make 
<p><strong>Criteria</strong> 
(how 
make 
your 
module, 
flexibility 
module, 
<p>In 
your 
and 
and 
development 
and 
and 
and 
and 
word 
word 
duplicate 
complex 
<p>Routines 
id="cohesion">Cohesion</h3> 
and 
and 
and 
and 
and 
and 
and 
and 
and 
and 
support.</p> 
and 
id="information-hiding">Information 
and 
<li>more 
<li>more 
<li>more 
<li>more 
<li>more 
<li>more 
and 
and 
and 
and 
and 
and 
and 
